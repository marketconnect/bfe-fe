--- a/app/[lang]/admin/page.tsx
+++ b/app/[lang]/admin/page.tsx
@@ -5,6 +5,7 @@
 import { useRouter, useParams, useSearchParams } from 'next/navigation';
 import { useAuth } from '@/hooks/useAuth';
 import * as api from '@/lib/api';
+import { getPluralForm } from '@/lib/utils';
 import ProtectedRoute from '@/components/ProtectedRoute';
 import { User, GetFilesResponse, Upload } from '@/lib/types';
 import useSWR from 'swr';
@@ -1426,12 +1427,21 @@
             <div className="h-full flex flex-col relative">
               <div className="flex-1 overflow-y-auto bg-white border border-gray-200 p-6 rounded-lg shadow-sm mx-3 md:mx-4 my-1.5">
                  <div className="flex flex-col items-start gap-4 md:flex-row md:items-center md:justify-between mb-8">
                 <div>
                   <h2 className="text-3xl font-bold text-gray-900 mb-2">{dictionary.adminPanel.manageUsersTitle}</h2>
-                  <p className="text-gray-600 text-sm">{dictionary.adminPanel.users.description}</p>
+                  <p className="text-gray-600 text-sm">{dictionary.adminPanel.users.description}</p>
                 </div>
                 <div className="flex items-center space-x-3">
                   <div className="bg-gradient-to-r from-blue-50 to-indigo-50 px-4 py-2 rounded-full border border-blue-200">
                     <span className="text-sm font-medium text-blue-700">
-                      {dictionary.adminPanel.users.userCount.replace('{count}', String(filteredUsers.length))}
+                      {(() => {
+                        const count = filteredUsers.length;
+                        const userCountDict = dictionary.adminPanel.users.userCount;
+                        if (userCountDict && typeof userCountDict === 'object') {
+                          if (lang === 'ru') {
+                            return `${count} ${getPluralForm(count, userCountDict.one, userCountDict.few, userCountDict.many)}`;
+                          }
+                          return `${count} ${count === 1 ? userCountDict.one : userCountDict.other}`;
+                        }
+                        return `${count} users`; // Fallback
+                      })()}
                     </span>
                   </div>
                 </div>
--- /dev/null
+++ b/lib/utils.ts
+/**
+ * Returns the correct plural form of a word for a given number, based on Russian grammar rules.
+ * @param number The number to determine the plural form for.
+ * @param one The form for a single item (e.g., "пользователь").
+ * @param few The form for 2-4 items (e.g., "пользователя").
+ * @param many The form for 5+ items and numbers ending in 11-19 (e.g., "пользователей").
+ * @returns The correctly pluralized string.
+ */
+export const getPluralForm = (number: number, one: string, few: string, many: string): string => {
+  let n = Math.abs(number);
+  n %= 100;
+  if (n >= 5 && n <= 20) {
+    return many;
+  }
+  n %= 10;
+  if (n === 1) {
+    return one;
+  }
+  if (n >= 2 && n <= 4) {
+    return few;
+  }
+  return many;
+};
--- a/public/dictionaries/en.json
+++ b/public/dictionaries/en.json
@@ -60,8 +60,11 @@
       },
       "createUser": { "openDrawer": "Create User", "closeDrawer": "Close" },
       "folderPicker": { "select": "Select" },
-       "description": "Manage users and their access rights",
-      "userCount": "{count} users",
+      "description": "Manage users and their access rights",
+      "userCount": {
+        "one": "user",
+        "other": "users"
+      },
       "table": {
         "user": "User",
         "login": "Login",
--- a/public/dictionaries/ru.json
+++ b/public/dictionaries/ru.json
@@ -60,8 +60,12 @@
       },
       "createUser": { "openDrawer": "Создать пользователя", "closeDrawer": "Закрыть" },
       "folderPicker": { "select": "Выбрать" },
-          "description": "Управление пользователями и их правами доступа",
-      "userCount": "{count} пользователей",
+      "description": "Управление пользователями и их правами доступа",
+      "userCount": {
+        "one": "пользователь",
+        "few": "пользователя",
+        "many": "пользователей"
+      },
       "table": {
         "user": "Пользователь",
         "login": "Логин",